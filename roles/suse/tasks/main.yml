---

- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: Generate /etc/hosts file
  template:
    src: ../templates/hosts.j2
    dest: /etc/hosts

- name: Register cloud guest
  shell: registercloudguest --force-new
  become: yes

- name: Update all packages
  shell: zypper -n --no-gpg-checks update
  become: yes

- name: Install required packages
  shell: "zypper -n --no-gpg-checks install {{ item }}"
  become: yes
  with_items:
      - gcc
      - java-1_8_0-openjdk
      - perl
      - rsync
      - ruby
      - ruby-devel
      - tar
      - zip
      - make

- name: Install Ruby gems
  shell: "gem install {{ item }}"
  become: yes
  with_items:
    - io-console
    - net-ssh
    - net-scp

- name: Create mysql group
  group:
    name: mysql
    state: present

- name: Create tungsten group
  group:
    name: tungsten
    state: present

- name: Create the tungsten user
  user:
    name: tungsten
    comment: Tungsten User
    groups: mysql,tungsten

- name: Add tungsten user to sudoers file
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^tungsten.*ALL$"
    line: "tungsten ALL=(ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"

- name: Create tungsten folders
  file:
    path: "{{ item }}"
    state: directory
    owner: tungsten
    group: tungsten
    mode: 0700
  with_items:
    - /etc/tungsten
    - /opt/continuent
    - /opt/continuent/software

- name: Set security limits for the tungsten user
  copy:
    src: ../files/limits.conf
    dest: /etc/security/limits.d/99-tungsten.conf
    owner: root
    group: root
    mode: 0644

- name: Create tungsten ssh folder
  file:
    path: /home/tungsten/.ssh
    state: directory
    owner: tungsten
    group: tungsten
    mode: 0700

- name: Copy the ssh keys and config for tungsten user
  copy:
    src: "{{ item.src }}"
    dest: "/home/tungsten/.ssh/{{ item.dest }}"
    owner: tungsten
    group: tungsten
    mode: "{{ item.mode }}"
  with_items:
    - { src: "../files/id_rsa.tungsten", dest: "id_rsa", mode: "0600" }
    - { src: "../files/id_rsa.tungsten.pub", dest: "id_rsa.pub", mode: "0644" }
    - { src: "../files/ssh_config", dest: "config", mode: "0644" }

- name: Set ssh authorized key for the tungsten user
  authorized_key:
    user: tungsten
    state: present
    key: "{{ lookup('file', '../files/id_rsa.tungsten.pub') }}"

# DATABASE

- name: Install MySQL repository
  shell: "{{ item }}"
  become: yes
  with_items:
    - "cd /etc/zypp/repos.d/ && sudo wget https://download.opensuse.org/repositories/devel:/gcc/SLE-12/devel:gcc.repo"
    - "rpm -Uvh https://dev.mysql.com/get/mysql80-community-release-sl15-3.noarch.rpm"
    - "rpm --import /etc/RPM-GPG-KEY-mysql"

- name: Install MySQL server
  shell: zypper -n --no-gpg-checks install mysql-community-server
  become: yes

- name: Enable the MySQL service
  service:
    name: mysql
    state: started
    enabled: true

- name: Acquire temporary root password
  shell: 'awk -F'': '' ''$0 ~ "temporary password"{print $2}'' /var/log/mysqld.log'
  register: mysql_root_password_temp

- name: Set new root password from default temporary password
  shell: 'mysql -e "SET PASSWORD = ''{{ root_mysql_passwd }}'';" --connect-expired-password -uroot -p''{{ mysql_root_password_temp.stdout }}'' && touch /root/.my.password.changed'
  args:
    creates: /root/.my.password.changed

- name: Ensure root can login into MySQL localhost (without password)
  shell: 'mysql -e "CREATE USER ''root''@''{{ item }}'';"
    -uroot -p''{{ root_mysql_passwd }}'''
  with_items:
    - ::1
    - 127.0.0.1
    - localhost
  ignore_errors: yes

- name: Create the MySQL tungsten user
  shell: 'mysql -e "CREATE USER ''tungsten''@''{{ item }}'' IDENTIFIED BY ''{{tungsten_mysql_passwd}}''; GRANT ALL PRIVILEGES ON *.* TO ''tungsten''@''{{item}}'' WITH GRANT OPTION;" -uroot -p''{{ root_mysql_passwd }}'''
  with_items:
    - ::1
    - 127.0.0.1
    - localhost
    - "%"

- name: Create the MySQL app_user
  shell: 'mysql -e "CREATE USER ''app_user''@''%'' IDENTIFIED BY ''{{app_mysql_passwd}}''; GRANT ALL PRIVILEGES ON *.* TO ''app_user''@''{{item}}'';" -uroot -p''{{ root_mysql_passwd }}'''

- name: Revoke the SUPER privileges from the MySQL app_user
  command: mysql -NBe "REVOKE SUPER ON *.* FROM app_user@'%'"

- name: Adding user mysql to group tungsten
  user:
    name: mysql
    groups: tungsten
    append: yes

- name: Generate MySQL server-id
  shell: hostname -I | sed -e 's/ \+\([a-z0-9]\+\:\)\+[a-z0-9]\+//' | sed -e 's/ /\n/' | grep -v '^$' | tail -1 | awk -F. '{print $3 * 256 + $4}'
  register: mysql_server_id

- name: Create /etc/my.cnf
  template:
    src: ../templates/mysql.cnf.j2
    dest: /etc/my.cnf
    owner: root
    group: root
    mode: 0644
    backup: true

- name: Copy root .my.cnf file
  template:
    src: ../templates/root-my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600

- name: Copy tungsten .my.cnf file
  template:
    src: ../templates/tungsten-my.cnf.j2
    dest: /home/tungsten/.my.cnf
    owner: tungsten
    group: tungsten
    mode: 0600

- name: Restart the MySQL service
  service:
    name: mysql
    state: restarted

# INSTALL TUNGSTEN

- name: Copy tungsten.ini file
  copy:
    src: ../files/tungsten.ini
    dest: /etc/tungsten
    owner: tungsten
    group: tungsten
    mode: 0770

- name: Unarchive Tungsten Clustering software
  unarchive:
    src: ../files/tungsten-clustering-6.1.2-42.tar.gz
    dest: /opt/continuent/software

- name: Install Tungsten Clustering
  shell: /opt/continuent/software/tungsten-clustering-6.1.2-42/tools/tpm install
